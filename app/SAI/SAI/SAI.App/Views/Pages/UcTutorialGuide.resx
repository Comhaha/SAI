<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="goLabelingBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>