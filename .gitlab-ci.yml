stages:
    - auto_mr

auto_merge_request:
    stage: auto_mr
    only:
        - branches
    script:
        - |
            Write-Host "📄 커밋 메시지:"
            $commitMsg = git log -1 --pretty=%B
            $bodyOnly = ($commitMsg -split "`n" | Select-Object -Skip 1) -join "`n"

            Write-Host $bodyOnly

            if ($bodyOnly -notmatch '\[MR\]') {
              Write-Host "🚫 [MR] 태그 없음, MR 생성 생략"
              exit 0
            }

            Write-Host "✅ [MR] 태그 확인됨. 기존 MR 확인 중..."

            # GitLab API 헤더에 Personal Access Token 사용
            $headers = @{ "PRIVATE-TOKEN" = "$env:PERSONAL_TOKEN" }
            $sourceBranch = "$env:CI_COMMIT_REF_NAME"
            $projectId = "$env:CI_PROJECT_ID"
            $apiBase = "$($env:CI_API_V4_URL.TrimEnd('/'))/projects/$projectId/merge_requests"

            # source_branch 기준으로 모든 MR 가져오기
            $allMRs = Invoke-RestMethod -Headers $headers -Uri "$apiBase?source_branch=$sourceBranch" -Method Get

            # 열린 상태(opened)인 MR만 필터링
            $openMR = $allMRs | Where-Object { $_.state -eq "opened" }

            if ($openMR.Count -gt 0) {
              Write-Host "⚠️ 이미 열린 MR이 있음 → 새로 만들지 않음"
              exit 0
            }

            Write-Host "🚀 MR 자동 생성 시작..."

            Invoke-RestMethod -Headers $headers -Uri $apiBase -Method Post -Form @{
              source_branch = $sourceBranch
              target_branch = "develop"
              title = "자동 MR: $sourceBranch"
              description = "자동 생성된 Merge Request입니다. 커밋: $env:CI_COMMIT_SHORT_SHA"
            }

            Write-Host "✅ MR 생성 완료!"
